#
# Copyright (c) 2022-2023 helloworld <https://github.com/fw876/helloworld>
# Description: Build SSR-Plus+
#

name: Build SSR-Plus+

on:
  workflow_dispatch:
 
jobs:
  build:
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    permissions:
      actions: write
      
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - aarch64_generic
          
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }} 
          
      - name: Initialization values
        run: |               
          echo "date1=$(date +'%Y.%m.%d-%H.%M')" >> $GITHUB_ENV
          echo "date2=$(date +'%m/%d %Y')" >> $GITHUB_ENV
          echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV

      - name: Determine branch name
        run: |
          BRANCH="master"
          echo "Building for $BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Determine changed packages
        run: |
          # only detect packages with changes
          PKG_ROOTS=$(find . -name Makefile | \
            grep -v ".*/src/Makefile" | \
            sed -e 's@./\(.*\)/Makefile@\1/@')
          CHANGES=$(git diff --diff-filter=d --name-only origin/$BRANCH)

          for ROOT in $PKG_ROOTS; do
            for CHANGE in $CHANGES; do
              if [[ "$CHANGE" == "$ROOT"* ]]; then
                PACKAGES+=$(echo "$ROOT" | sed -e 's@\(.*\)/@\1 @')
                break
              fi
            done
          done
          # fallback to test packages if nothing explicitly changes this is
          # should run if other mechanics in packages.git changed
          PACKAGES="${PACKAGES:-luci-app-ssr-plus}"

          echo "Building $PACKAGES"
          echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV
          
      - name: Build
        uses: immortalwrt/gh-action-sdk@v4.1     
        env:
          ARCH: ${{ matrix.arch }}-${{ env.BRANCH }}
          FEEDNAME: packages_ci

      - name: Move created packages to project dir
        run: | 
          mkdir ssrplus
          cp bin/packages/${{ matrix.arch }}/packages_ci/*.ipk ./ssrplus || true
          echo "FIRMPATH=$PWD" >> $GITHUB_ENV
          tar -czvf ${{matrix.arch}}-packages_${{env.date1}}.tar.gz ./ssrplus

      - name: Collect metadata
        run: |
          MERGE_ID=$(git rev-parse --short HEAD)
          echo "MERGE_ID=$MERGE_ID" >> $GITHUB_ENV
          echo "BASE_ID=$(git rev-parse --short HEAD^1)" >> $GITHUB_ENV
          echo "HEAD_ID=$(git rev-parse --short HEAD^2)" >> $GITHUB_ENV
          PRNUMBER=${GITHUB_REF_NAME%/merge}
          echo "PRNUMBER=$PRNUMBER" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=${{matrix.arch}}-packages-$MERGE_ID" >> $GITHUB_ENV              

      - name: Generate metadata
        run: |
          cat << _EOF_ > PKG-INFO
          Metadata-Version: 2.1
          Name: ${{env.ARCHIVE_NAME}}
          Version: $BRANCH
          Author: $GITHUB_ACTOR
          Home-page: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/pull/$PRNUMBER
          Download-URL: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          Summary: $PACKAGES
          Platform: ${{ matrix.arch }}
          Packages for ImmortalWrt $BRANCH running on ${{matrix.arch}}, built from PR $PRNUMBER
          at commit $HEAD_ID, against $BRANCH at commit $BASE_ID, with merge SHA $MERGE_ID.
          Modified packages:
          _EOF_
          for p in $PACKAGES
          do
            echo "  "$p >> PKG-INFO
          done
          echo >> PKG-INFO
          echo Full file listing: >> PKG-INFO
          ls -al *.ipk >> PKG-INFO || true
          cat PKG-INFO
            
      - name: Release packages
        uses: softprops/action-gh-release@master
        with:
          tag_name: ${{env.ARCHIVE_NAME}}_${{env.date1}}
          files: ${{ env.FIRMPATH }}/*.tar.gz
          body: |
            这是SSR Plus+升级包，内含多个设备！
            请选择你需要的升级包！

      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@master      
        with:
          #要保留的最新版本的数量
          keep_latest: 6
          #删除与旧版本关联的标签, 没有任何关联版本的旧标签不会被删除
          delete_tags: true
            
      - name: Delete old workflows    
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 0
          
          
#  #########################################################

